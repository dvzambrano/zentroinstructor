<?php

/**
 * Plan
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    SGArqBase
 * @subpackage model
 * @author     Donel Vazquez Zambrano
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Plan extends BasePlan {

    const PERSONAL_PLAN_PREFIX = 'Plan de trabajo de';

    public function isUsed() {
        if ($this->getTasks()->count() > 0)
            return true;

        return false;
    }

    public function createDateEndPlan() {
        $tasksParents = new Doctrine_Collection('Task');
        $tasks = $this->getTasks();

        foreach ($tasks as $task)
            if ($task->getParentid() == NULL)
                $tasksParents[] = $task;

        $dateEndPlan = substr($tasksParents[0]->getEvent()->getEnd(), 0, 10);

        foreach ($tasksParents as $tasksParent)
            if (self::isMayor($tasksParent->getEvent()->getEnd(), $dateEndPlan))
                $dateEndPlan = substr($tasksParent->getEvent()->getEnd(), 0, 10);

        if ($dateEndPlan)
            return $dateEndPlan;
        else
            return false;
    }

    private function isMayor($date1, $date2) {
        $date1 = explode("-", substr($date1, 0, 10));
        $date2 = explode("-", $date2);

        if ($date1[0] > $date2[0])
            return true;
        else if ($date1[0] == $date2[0] && $date1[1] > $date2[1])
            return true;
        else if ($date1[0] == $date2[0] && $date1[1] == $date2[1] && $date1[2] > $date2[2])
            return true;

        return false;
    }

    public function getCost() {
        $total = 0;

        // addin tasks costs
        foreach ($this->getTasks() as $task) {
            $total += $task->getCost();
        }

        // adding subplans costs
        foreach ($this->getPlans() as $plan) {
            $total += $plan->getCost();
        }
        return $total;
    }

    public function includeTask($taskid) {
        $query = Doctrine_Core::getTable('PlanTaskRelation')->createQuery('r')
                ->where('r.taskid = ? AND r.planid = ?', array($taskid, $this->getId()));
        $relation = $query->fetchOne();
        if (!$relation) {
            $relation = new PlanTaskRelation();
            $relation->setTaskid($taskid);
            $relation->setPlanid($this->getId());
            $relation->save();
        }
    }

}