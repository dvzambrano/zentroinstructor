<?php

/**
 * Schedule
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    SGR
 * @subpackage model
 * @author     Donel Vazquez Zambrano
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Schedule extends BaseSchedule {

    public static function getWorkingDayHours() {

        return 8;
    }

    public function isValidDate($date) {
        if (stripos($this->getExceptions(), '"day":' . $date->format('j') . ',"month":' . $date->format('n')))
            return false;

        $index = 0;
        switch ($date->format('D')) {
            case 'Mon':
            case 'Lun':
                $index = 1;
                break;
            case 'Tue':
            case 'Mar':
                $index = 2;
                break;
            case 'Wed':
            case 'Mie':
            case 'MiÃ©':
                $index = 3;
                break;
            case 'Thu':
            case 'Jue':
                $index = 4;
                break;
            case 'Fri':
            case 'Vie':
                $index = 5;
                break;
            case 'Sat':
            case 'Sab':
            case 'SÃ¡b':
                $index = 6;
                break;
            default:
                break;
        }

        $sesionsasarray = json_decode($this->getSesions());
        $sesions = json_decode($sesionsasarray[$index]->sesions);
        $result = false;

        foreach ($sesions as $sesion) {
            $start = DateTime::createFromFormat('Y-m-d g:i A', $date->format('Y-m-d') . ' ' . $sesion->begintime);
            $end = DateTime::createFromFormat('Y-m-d g:i A', $date->format('Y-m-d') . ' ' . $sesion->endtime);
            if ($start <= $date && $date <= $end) {
                $result = true;
                break;
            }
        }

        return $result;
    }

    public function isUsed() {
        if ($this->getIsActive())
            return true;

        return false;
    }

}