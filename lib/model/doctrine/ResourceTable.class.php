<?php

/**
 * ResourceTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class ResourceTable extends Doctrine_Table {

    /**
     * Returns an instance of this class.
     *
     * @return object ResourceTable
     */
    public static function getInstance() {
        return Doctrine_Core::getTable('Resource');
    }

    public static function formatData($array, $page, $count = false) {
        $rows = array();

        $pos = 0;
        foreach ($array as $row) {
            $rows[] = $row->toArray();
            $rows[$pos]['deleteable'] = true;

            $pos++;
        }

        $rows = array(
            'metaData' => array(
                'idProperty' => 'id',
                'root' => 'data',
                'totalProperty' => 'results',
                'fields' => array(
                    array('name' => 'id', 'type' => 'int'),
                    array('name' => 'deleteable', 'type' => 'bool'),
                    array('name' => 'code', 'type' => 'string')
                ,array('name' => 'name', 'type' => 'string')
                ,array('name' => 'rate', 'type' => 'decimal')
                ,array('name' => 'extrarate', 'type' => 'decimal')
                ,array('name' => 'comment', 'type' => 'string')
                
                ),
                'sortInfo' => array(
                    'field' => 'id',
                    'direction' => 'ASC'
                )
            ),
            'success' => true,
            'message' => 'app.msg.info.loadedsuccessful',
            'results' => $count,
            'data' => $rows,
            'page' => $page
        );
        return $rows;
    }

    const table = 'Resource';
    const akfield = 'code';

    public static function getAllPaged($start, $limit, $query, $filters) {
        $query = BaseTable::getAllPaged(self::table, $start, $limit, $query, $filters);
        return self::formatData($query['results'], $query['page'], $query['count']);
    }

    public static function findByAK($ak) {
        return BaseTable::findByAK(self::table, self::akfield, $ak);
    }
    
    public static function getAll($query) {
        $q = Doctrine_Query::create()
                ->from(self::table.' cbr');

        if ($query && $query != '')
            $q = Doctrine_Query::create()
                    ->select('cbr.*')
                    ->from(self::table.' cbr')
                    ->where('cbr.name LIKE ?', '%' . $query . '%');

        return self::formatData($q->execute(), 1);
    }

    public static function deleteByPK($pks, $user = false) {
        return BaseTable::deleteByPK(self::getInstance(), $pks);
    }

    //[getByParentMethod]
}